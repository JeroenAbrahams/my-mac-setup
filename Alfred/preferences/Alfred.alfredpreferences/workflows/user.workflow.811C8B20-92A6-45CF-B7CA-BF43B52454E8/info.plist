<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.wrjlewis.notion-search</string>
	<key>connections</key>
	<dict>
		<key>7DD3BDE5-A157-42E5-9376-F681FB50A4EE</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>FCE03E9D-F992-4B21-9A77-E72D5130DF80</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>C4564BA3-C023-400E-AA4E-726CC734C91D</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Will Lewis</string>
	<key>description</key>
	<string>Instant Notion Search</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Notion Search</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>68</integer>
				<key>keyword</key>
				<string>ns</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Loading..</string>
				<key>script</key>
				<string>python3 notion.py "{query}"</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string>notion.py</string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Notion Search</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>7DD3BDE5-A157-42E5-9376-F681FB50A4EE</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>browser</key>
				<string></string>
				<key>spaces</key>
				<string></string>
				<key>url</key>
				<string></string>
				<key>utf8</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>FCE03E9D-F992-4B21-9A77-E72D5130DF80</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist='https://raw.githubusercontent.com/wrjlewis/notion-search-alfred-workflow/master/info.plist'
readonly workflow_url='wrjlewis/notion-search-alfred-workflow'
readonly download_type='github_release'
readonly frequency_check='1'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local -r notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/Resources/Scripts/notificator" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  local -r terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  download_url="$([[ "${download_type}" == 'github_release' ]] &amp;&amp; curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest" | grep 'browser_download_url' | head -1 | sed -E 's/.*browser_download_url": "(.*)"/\1/' || echo "${workflow_url}")"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${download_url}"
    open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>C4564BA3-C023-400E-AA4E-726CC734C91D</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>notion-search-alfred-workflow
An Alfred workflow to search Notion.so with instant results

Simply type your keyword into Alfred (default: ns) to see instant search results from Notion that mimic the Quick Find function in the Notion webapp. Selecting a search result takes you to that page in Notion in your default web browser.

Documentation, instructions on workflow variables in the readme here:
https://github.com/wrjlewis/notion-search-alfred-workflow/

Forum topic:
https://www.alfredforum.com/topic/14451-notionso-instant-search-workflow/

Thanks!</string>
	<key>uidata</key>
	<dict>
		<key>7DD3BDE5-A157-42E5-9376-F681FB50A4EE</key>
		<dict>
			<key>xpos</key>
			<integer>50</integer>
			<key>ypos</key>
			<integer>50</integer>
		</dict>
		<key>C4564BA3-C023-400E-AA4E-726CC734C91D</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>255</integer>
			<key>ypos</key>
			<integer>175</integer>
		</dict>
		<key>FCE03E9D-F992-4B21-9A77-E72D5130DF80</key>
		<dict>
			<key>xpos</key>
			<integer>255</integer>
			<key>ypos</key>
			<integer>50</integer>
		</dict>
	</dict>
	<key>variables</key>
	<dict>
		<key>cookie</key>
		<string>notion_browser_id=d63ae8f1-2357-407b-867b-1cc54e598f49; notion_cookie_consent={%22id%22:%227bcdd27c-bc06-4946-9799-cd81135d3a3c%22%2C%22permission%22:{%22necessary%22:true%2C%22targeting%22:true%2C%22preference%22:true%2C%22performance%22:true}}; NEXT_LOCALE=en-US; notion_experiment_device_id=d9e4952f-fa53-4860-a4ed-5cee2a5c7030; notion_locale=en-US/autodetect; notion_user_id=b3c3ce73-4e42-45cf-ad6b-e5e746822f65; notion_users=[%22b3c3ce73-4e42-45cf-ad6b-e5e746822f65%22]; logglytrackingsession=3322f783-5729-4666-9464-4586b369adde; __cf_bm=58aIdM7XBoHMMKNW1O5kl5HF6XRtClh0Q1acIVja6d4-1654059365-0-AUftXMbJ9sd9cMu0kmrsqCWyWprVJs41t0+g6NkDEJx/4fQnYFhO5cWXiYXmGMIjFydI6m5elvsAHWTKsg9PcAU=; notion_check_cookie_consent=true; token_v2=123026a89099af7b4487668d05d5c1e5036a0d8c6de45b5677408844785733a6410cfc4e5945ac65d11b9d15f0338993ee43db30b1e9695a55b4837a6289e8e435e104cae579c09f23b7b5e2d802</string>
		<key>enableIcons</key>
		<string>True</string>
		<key>isNavigableOnly</key>
		<string>True</string>
		<key>notionSpaceId</key>
		<string>2b44ed4c-5ba1-4892-88b0-59faf8538913</string>
		<key>showRecentlyViewedPages</key>
		<string>True</string>
		<key>useDesktopClient</key>
		<string>True</string>
	</dict>
	<key>variablesdontexport</key>
	<array>
		<string>notionSpaceId</string>
		<string>cookie</string>
	</array>
	<key>version</key>
	<string>0.4.1</string>
	<key>webaddress</key>
	<string>https://willlewis.co.uk</string>
</dict>
</plist>
